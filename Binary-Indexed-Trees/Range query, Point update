#include <bits/stdc++.h>
using namespace std;

#define ll long long

ll scan()
{
    ll n=0;
    char c=getchar_unlocked();
    while( c < '0' || c > '9' ) c=getchar_unlocked();
    while( c >= '0' && c <= '9' )
    n = (n<<3)+(n<<1) + c-'0', c=getchar_unlocked();
    return n;
}

struct node
{
    ll x,y;
};

bool cmp(node a,node b)
{
    if(a.x<b.x) return true;
    else if(a.x==b.x)
    {
        if(a.y<b.y) return true;
        else return false;
    }
    else return false;
}

ll bit[1000005];
ll n,m;
void update(ll idx)
{
    while(idx<=m)
    {
        bit[idx]++;
        idx+=(idx&(-idx));
    }
}

ll query(ll idx)
{
    ll sum=0;
    while(idx>0)
    {
        sum+=bit[idx];
        idx-=(idx&(-idx));
    }
    return sum;
}

node nd[1000005];

int main()
{
    ll t,l;
    t=scan();
    for(l=1;l<=t;l++)
    {

        ll k,i,j,sum,cnt;
        n=scan();
        m=scan();
        k=scan();
        for(i=0;i<=1000;i++) bit[i]=0;
        for(i=0;i<k;i++)
        {
            nd[i].x=scan();
            nd[i].y=scan();
        }
        sort(nd,nd+k,cmp);

        cnt=0;

        for(i=0;i<k;i++)
        {
            cnt+=(query(m)-query(nd[i].y));
            update(nd[i].y);
        }
        printf("Test case %lld: %lld\n",l,cnt);
    }
    return 0;
}
